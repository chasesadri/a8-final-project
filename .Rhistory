# nrow(alc.consumption) - nrow(county.drinking) == nrow(states.and.dc) + 1 # +1 for nation #TRUE
county.drinking <- mutate(county.drinking, male.diff = males_2012 - males_2002,
female.diff = females_2012 - females_2002,
both.diff = both_sexes_2012 - both_sexes_2002)  # Calculates and stores difference in drinking for male/female and both
avg.2012 <- summarise(county.drinking, mean.both = mean(both_sexes_2012))  # calculates and stores the mean
print(avg.2012)
# calculates the minimum and maximum and prints them
min.max.2012 <- summarise(county.drinking, minimum.both = min(both_sexes_2012), maximum.both = max(both_sexes_2012))  # calculates and stores the minimum
print(paste("Minimum =", min.2012,"  Maximum =", max.2012))
# It binds the rows and writes the file to csv file
group_by(county.drinking, state) %>%
summarise(minimum = min(both_sexes_2012), maximumn = max(both_sexes_2012)) %>%
write.csv("data/state_binge_drinking.csv")
county.male.increase <- filter(county.drinking, male.diff > 0)  # filters for male.diff > 0
# Calculates and prints the male binge increase
print(paste("Male binge increase: ", round(nrow(county.male.increase)/nrow(county.drinking) *100),"%", sep = "", collapse = NULL))
county.female.increase <- filter(county.drinking, female.diff > 0)  # filters for female.diff > 0
# Calculates and prints the female binge increase
print(paste("Female binge increase: ", round(nrow(county.female.increase)/nrow(county.drinking) *100),"%", sep = "", collapse = NULL))
# Calculates and prints Female binge increase & male decrease
female.increase.male.decrease <- filter(county.drinking, female.diff > 0 & male.diff < 0)
print(paste("Female binge increase & male decrease: ", round(nrow(female.increase.male.decrease)/nrow(county.drinking)*100), "%",sep = "", collapse = NULL))
# finds and median and then filters the max median and selects (1,1) for males
group_by(county.drinking, state) %>%
summarise(male.median.2012 = median(males_2012), male.median.2002 = median(males_2002)) %>%
filter(male.median.2012 - male.median.2002 == max(male.median.2012 - male.median.2002)) %>%
select(1,1)
# finds and median and then filters the max median and selects (1,1) for females
filter(county.drinking, female.diff > 0, male.diff < 0) %>%
group_by(state) %>%
summarize(female.median.2012 = median(females_2012), female.median.2002 = median(females_2002)) %>%
filter(female.median.2012 - female.median.2002 == max(female.median.2012 - female.median.2002)) %>%
select(1,1)
#################
#### PART 3 #####
#################
colnames(binge.drinking)[3:35] <- paste0("binge_", colnames(binge.drinking)[3:35])   # adds the "binge_" to column names in binge.drinking
colnames(alc.consumption)[3:35] <- paste0("any_", colnames(alc.consumption)[3:35])   # adds the "any_" to column names in alc.consumption
all.drinking <- full_join(binge.drinking, alc.consumption)   # joinds the two data frame
all.drinking <- mutate(all.drinking, non_binge_2012 = any_both_sexes_2012 - binge_both_sexes_2012)  # finds the difference in drinkin
# filters the location and finds the mean
filter(all.drinking, location != state, location != "United Staes") %>%
summarise(mean(non_binge_2012))
# filters location and finds the minimum for non_binge_2012 and selects them
filter(all.drinking, location == state) %>%
filter(non_binge_2012 == min(non_binge_2012)) %>%
select(location, any_both_sexes_2012, binge_both_sexes_2012, non_binge_2012)
# This function writes a new data frame to csv file
# It takes in state and year as parameters and return data frame of drnking there at that year
ExportStateYear <- function(input.state, input.year)
{
input.year <- toString(input.year)
filter(all.drinking, input.state == state) %>%
select(location, state, contains(input.year)) %>%
arrange_(paste0("-any_both_sexes_", input.year)) %>%
write.csv(file = paste0("data/drinking_", input.state, input.year,".csv"))
}
ExportStateYear("Washington", 2012)
#################
#### PART 4 #####
#################
library(dplyr)
#################
#### PART 1 #####
#################
# Reads in data
alc.consumption <- read.csv('data/any_drinking.csv', stringsAsFactors =  FALSE)
# selects the requred columns
data.2012 <- select(alc.consumption, state, location, both_sexes_2012, females_2012, males_2012)
# Creates a new column - difference of 2 other
data.2012 <- mutate(data.2012, diff.2012 = males_2012 - females_2012)
# filters for difference > 0
females.more <- filter(data.2012,  diff.2012 < 0)
# counts the number of rows
no.of.rows <- nrow(females.more)
# prints the result
print(paste("Females drank more than males in", no.of.rows , "locations.", sep = " ", collapse = NULL ))
# Prints the location where difference in minimum
print(paste(filter(data.2012,  diff.2012 == min(diff.2012)) %>% select(location, state), sep = ',', collapse = NULL))
states.and.dc <- filter(data.2012, state == location)
# nrow(states.and.dc) == 51  # TRUE
states.and.dc <- mutate(states.and.dc, state, both_sexes_2012, females_2012, males_2012 )  # selects the desired columns
state.highest.rate <- filter(states.and.dc , both_sexes_2012 == max(both_sexes_2012))  # filters the max for both sexes
print(state.highest.rate$location)  # prints location
state.lowest.rate <- filter(states.and.dc , both_sexes_2012 == min(both_sexes_2012))  # filters the minimum for both sexes
print(state.lowest.rate$location)  # prints location
print(paste("Range in drinking rate was " ,select(state.highest.rate, both_sexes_2012) - select(state.lowest.rate, both_sexes_2012)))  # Prints the drinking rate range
#################
#### PART 2 #####
#################
binge.drinking <- read.csv('data/binge_drinking.csv', stringsAsFactors =  F)  # Reads in the CSV file
county.drinking <- filter(binge.drinking, state != location & state != "National" )  # filters only for counties
# nrow(alc.consumption) - nrow(county.drinking) == nrow(states.and.dc) + 1 # +1 for nation #TRUE
county.drinking <- mutate(county.drinking, male.diff = males_2012 - males_2002,
female.diff = females_2012 - females_2002,
both.diff = both_sexes_2012 - both_sexes_2002)  # Calculates and stores difference in drinking for male/female and both
avg.2012 <- summarise(county.drinking, mean.both = mean(both_sexes_2012))  # calculates and stores the mean
print(avg.2012)
# calculates the minimum and maximum and prints them
min.max.2012 <- summarise(county.drinking, minimum.both = min(both_sexes_2012), maximum.both = max(both_sexes_2012))  # calculates and stores the minimum
print(paste("Minimum =", min.2012,"  Maximum =", max.2012))
# It binds the rows and writes the file to csv file
group_by(county.drinking, state) %>%
summarise(minimum = min(both_sexes_2012), maximumn = max(both_sexes_2012)) %>%
write.csv("data/state_binge_drinking.csv")
county.male.increase <- filter(county.drinking, male.diff > 0)  # filters for male.diff > 0
# Calculates and prints the male binge increase
print(paste("Male binge increase: ", round(nrow(county.male.increase)/nrow(county.drinking) *100),"%", sep = "", collapse = NULL))
county.female.increase <- filter(county.drinking, female.diff > 0)  # filters for female.diff > 0
# Calculates and prints the female binge increase
print(paste("Female binge increase: ", round(nrow(county.female.increase)/nrow(county.drinking) *100),"%", sep = "", collapse = NULL))
# Calculates and prints Female binge increase & male decrease
female.increase.male.decrease <- filter(county.drinking, female.diff > 0 & male.diff < 0)
print(paste("Female binge increase & male decrease: ", round(nrow(female.increase.male.decrease)/nrow(county.drinking)*100), "%",sep = "", collapse = NULL))
# finds and median and then filters the max median and selects (1,1) for males
group_by(county.drinking, state) %>%
summarise(male.median.2012 = median(males_2012), male.median.2002 = median(males_2002)) %>%
filter(male.median.2012 - male.median.2002 == max(male.median.2012 - male.median.2002)) %>%
select(1,1)
# finds and median and then filters the max median and selects (1,1) for females
filter(county.drinking, female.diff > 0, male.diff < 0) %>%
group_by(state) %>%
summarize(female.median.2012 = median(females_2012), female.median.2002 = median(females_2002)) %>%
filter(female.median.2012 - female.median.2002 == max(female.median.2012 - female.median.2002)) %>%
select(1,1)
#################
#### PART 3 #####
#################
colnames(binge.drinking)[3:35] <- paste0("binge_", colnames(binge.drinking)[3:35])   # adds the "binge_" to column names in binge.drinking
colnames(alc.consumption)[3:35] <- paste0("any_", colnames(alc.consumption)[3:35])   # adds the "any_" to column names in alc.consumption
all.drinking <- full_join(binge.drinking, alc.consumption)   # joinds the two data frame
all.drinking <- mutate(all.drinking, non_binge_2012 = any_both_sexes_2012 - binge_both_sexes_2012)  # finds the difference in drinkin
# filters the location and finds the mean
filter(all.drinking, location != state, location != "United Staes") %>%
summarise(mean(non_binge_2012))
# filters location and finds the minimum for non_binge_2012 and selects them
filter(all.drinking, location == state) %>%
filter(non_binge_2012 == min(non_binge_2012)) %>%
select(location, any_both_sexes_2012, binge_both_sexes_2012, non_binge_2012)
# This function writes a new data frame to csv file
# It takes in state and year as parameters and return data frame of drnking there at that year
ExportStateYear <- function(input.state, input.year)
{
input.year <- toString(input.year)
filter(all.drinking, input.state == state) %>%
select(location, state, contains(input.year)) %>%
arrange_(paste0("-any_both_sexes_", input.year)) %>%
write.csv(file = paste0("data/drinking_", input.state, input.year,".csv"))
}
ExportStateYear("Washington", 2012)
#################
#### PART 4 #####
#################
library(dplyr)
#################
#### PART 1 #####
#################
# Reads in data
alc.consumption <- read.csv('data/any_drinking.csv', stringsAsFactors =  FALSE)
# selects the requred columns
data.2012 <- select(alc.consumption, state, location, both_sexes_2012, females_2012, males_2012)
# Creates a new column - difference of 2 other
data.2012 <- mutate(data.2012, diff.2012 = males_2012 - females_2012)
# filters for difference > 0
females.more <- filter(data.2012,  diff.2012 < 0)
# counts the number of rows
no.of.rows <- nrow(females.more)
# prints the result
print(paste("Females drank more than males in", no.of.rows , "locations.", sep = " ", collapse = NULL ))
# Prints the location where difference in minimum
print(paste(filter(data.2012,  diff.2012 == min(diff.2012)) %>% select(location, state), sep = ',', collapse = NULL))
states.and.dc <- filter(data.2012, state == location)
# nrow(states.and.dc) == 51  # TRUE
states.and.dc <- mutate(states.and.dc, state, both_sexes_2012, females_2012, males_2012 )  # selects the desired columns
state.highest.rate <- filter(states.and.dc , both_sexes_2012 == max(both_sexes_2012))  # filters the max for both sexes
print(state.highest.rate$location)  # prints location
state.lowest.rate <- filter(states.and.dc , both_sexes_2012 == min(both_sexes_2012))  # filters the minimum for both sexes
print(state.lowest.rate$location)  # prints location
print(paste("Range in drinking rate was " ,select(state.highest.rate, both_sexes_2012) - select(state.lowest.rate, both_sexes_2012)))  # Prints the drinking rate range
#################
#### PART 2 #####
#################
binge.drinking <- read.csv('data/binge_drinking.csv', stringsAsFactors =  F)  # Reads in the CSV file
county.drinking <- filter(binge.drinking, state != location & state != "National" )  # filters only for counties
# nrow(alc.consumption) - nrow(county.drinking) == nrow(states.and.dc) + 1 # +1 for nation #TRUE
county.drinking <- mutate(county.drinking, male.diff = males_2012 - males_2002,
female.diff = females_2012 - females_2002,
both.diff = both_sexes_2012 - both_sexes_2002)  # Calculates and stores difference in drinking for male/female and both
avg.2012 <- summarise(county.drinking, mean.both = mean(both_sexes_2012))  # calculates and stores the mean
print(avg.2012)
# calculates the minimum and maximum and prints them
min.max.2012 <- summarise(county.drinking, minimum.both = min(both_sexes_2012), maximum.both = max(both_sexes_2012))  # calculates and stores the minimum
print(paste("Minimum =", min.2012,"  Maximum =", max.2012))
# It binds the rows and writes the file to csv file
group_by(county.drinking, state) %>%
summarise(minimum = min(both_sexes_2012), maximumn = max(both_sexes_2012)) %>%
write.csv("data/state_binge_drinking.csv")
county.male.increase <- filter(county.drinking, male.diff > 0)  # filters for male.diff > 0
# Calculates and prints the male binge increase
print(paste("Male binge increase: ", round(nrow(county.male.increase)/nrow(county.drinking) *100),"%", sep = "", collapse = NULL))
county.female.increase <- filter(county.drinking, female.diff > 0)  # filters for female.diff > 0
# Calculates and prints the female binge increase
print(paste("Female binge increase: ", round(nrow(county.female.increase)/nrow(county.drinking) *100),"%", sep = "", collapse = NULL))
# Calculates and prints Female binge increase & male decrease
female.increase.male.decrease <- filter(county.drinking, female.diff > 0 & male.diff < 0)
print(paste("Female binge increase & male decrease: ", round(nrow(female.increase.male.decrease)/nrow(county.drinking)*100), "%",sep = "", collapse = NULL))
# finds and median and then filters the max median and selects (1,1) for males
group_by(county.drinking, state) %>%
summarise(male.median.2012 = median(males_2012), male.median.2002 = median(males_2002)) %>%
filter(male.median.2012 - male.median.2002 == max(male.median.2012 - male.median.2002)) %>%
select(1,1)
# finds and median and then filters the max median and selects (1,1) for females
filter(county.drinking, female.diff > 0, male.diff < 0) %>%
group_by(state) %>%
summarize(female.median.2012 = median(females_2012), female.median.2002 = median(females_2002)) %>%
filter(female.median.2012 - female.median.2002 == max(female.median.2012 - female.median.2002)) %>%
select(1,1)
#################
#### PART 3 #####
#################
colnames(binge.drinking)[3:35] <- paste0("binge_", colnames(binge.drinking)[3:35])   # adds the "binge_" to column names in binge.drinking
colnames(alc.consumption)[3:35] <- paste0("any_", colnames(alc.consumption)[3:35])   # adds the "any_" to column names in alc.consumption
all.drinking <- full_join(binge.drinking, alc.consumption)   # joinds the two data frame
all.drinking <- mutate(all.drinking, non_binge_2012 = any_both_sexes_2012 - binge_both_sexes_2012)  # finds the difference in drinkin
# filters the location and finds the mean
filter(all.drinking, location != state, location != "United Staes") %>%
summarise(mean(non_binge_2012))
# filters location and finds the minimum for non_binge_2012 and selects them
filter(all.drinking, location == state) %>%
filter(non_binge_2012 == min(non_binge_2012)) %>%
select(location, any_both_sexes_2012, binge_both_sexes_2012, non_binge_2012)
# This function writes a new data frame to csv file
# It takes in state and year as parameters and return data frame of drnking there at that year
ExportStateYear <- function(input.state, input.year)
{
input.year <- toString(input.year)
filter(all.drinking, input.state == state) %>%
select(location, state, contains(input.year)) %>%
arrange_(paste0("-any_both_sexes_", input.year)) %>%
write.csv(file = paste0("data/drinking_", input.state, input.year,".csv"))
}
ExportStateYear("Washington", 2012)
#################
#### PART 4 #####
#################
alc.consumption <- read.csv('data/any_drinking.csv', stringsAsFactors =  FALSE)
shiny::runApp('C:/Users/anush/Desktop/Info_201/a8-final-project')
runApp('C:/Users/anush/Desktop/Info_201/a8-final-project')
library("tidyr")
library("shiny")
library("sp")
library("maptools")
library("dpylr")
# loads data sets
data <- read.csv('data/fatalities_data.csv',
stringsAsFactors =  FALSE)
# renames column names of data
colnames(data) <- c("States", "1967", "1968", "1969", "1970",
"1971", "1972", "1973", "1974", "1975",
"1976", "1977", "1978", "1979", "1980",
"1981", "1982", "1983", "1984", "1985",
"1986", "1987", "1988", "1989", "1990",
"1991", "1992", "1993", "1994", "1995",
"1996", "1997", "1998", "1999", "2000",
"2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009", "2010",
"2011", "2012", "2013", "2014")
source("ui.R")
source("server.R")
shinyApp(ui = my.ui, server = my.server)
setwd("C:/Users/anush/Desktop/Info_201/a8-final-project")
setwd("C:/Users/anush/Desktop/Info_201/a8-final-project")
setwd("C:/Users/anush/Desktop/Info_201/a8-final-project")
library("tidyr")
library("shiny")
library("sp")
library("maptools")
library("dpylr")
# loads data sets
data <- read.csv('data/fatalities_data.csv',
stringsAsFactors =  FALSE)
# renames column names of data
colnames(data) <- c("States", "1967", "1968", "1969", "1970",
"1971", "1972", "1973", "1974", "1975",
"1976", "1977", "1978", "1979", "1980",
"1981", "1982", "1983", "1984", "1985",
"1986", "1987", "1988", "1989", "1990",
"1991", "1992", "1993", "1994", "1995",
"1996", "1997", "1998", "1999", "2000",
"2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009", "2010",
"2011", "2012", "2013", "2014")
source("ui.R")
source("server.R")
shinyApp(ui = my.ui, server = my.server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library("tidyr")
library("shiny")
library("sp")
library("maptools")
library("dpylr")
# loads data sets
data <- read.csv('data/fatalities_data.csv',
stringsAsFactors =  FALSE, strip.white = TRUE)
# renames column names of data
colnames(data) <- c("States", "1967", "1968", "1969", "1970",
"1971", "1972", "1973", "1974", "1975",
"1976", "1977", "1978", "1979", "1980",
"1981", "1982", "1983", "1984", "1985",
"1986", "1987", "1988", "1989", "1990",
"1991", "1992", "1993", "1994", "1995",
"1996", "1997", "1998", "1999", "2000",
"2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009", "2010",
"2011", "2012", "2013", "2014")
source("ui.R")
source("server.R")
shinyApp(ui = my.ui, server = my.server)
library("tidyr")
library("shiny")
library("sp")
library("maptools")
library("dpylr")
# loads data sets
data <- read.csv('data/fatalities_data.csv',
stringsAsFactors =  FALSE, strip.white = TRUE)
# renames column names of data
colnames(data) <- c("States", "1967", "1968", "1969", "1970",
"1971", "1972", "1973", "1974", "1975",
"1976", "1977", "1978", "1979", "1980",
"1981", "1982", "1983", "1984", "1985",
"1986", "1987", "1988", "1989", "1990",
"1991", "1992", "1993", "1994", "1995",
"1996", "1997", "1998", "1999", "2000",
"2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009", "2010",
"2011", "2012", "2013", "2014")
source("ui.R")
source("server.R")
shinyApp(ui = my.ui, server = my.server)
library("tidyr")
library("shiny")
library("sp")
library("maptools")
library("dpylr")
# loads data sets
data <- read.csv('data/fatalities_data.csv',
stringsAsFactors =  FALSE, strip.white = TRUE)
# renames column names of data
colnames(data) <- c("States", "1967", "1968", "1969", "1970",
"1971", "1972", "1973", "1974", "1975",
"1976", "1977", "1978", "1979", "1980",
"1981", "1982", "1983", "1984", "1985",
"1986", "1987", "1988", "1989", "1990",
"1991", "1992", "1993", "1994", "1995",
"1996", "1997", "1998", "1999", "2000",
"2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009", "2010",
"2011", "2012", "2013", "2014")
source("ui.R")
source("server.R")
shinyApp(ui = my.ui, server = my.server)
library("tidyr")
library("shiny")
library("sp")
library("maptools")
library("dpylr")
# loads data sets
data <- read.csv('data/fatalities_data.csv',
stringsAsFactors =  FALSE, strip.white = TRUE)
# renames column names of data
colnames(data) <- c("States", "1967", "1968", "1969", "1970",
"1971", "1972", "1973", "1974", "1975",
"1976", "1977", "1978", "1979", "1980",
"1981", "1982", "1983", "1984", "1985",
"1986", "1987", "1988", "1989", "1990",
"1991", "1992", "1993", "1994", "1995",
"1996", "1997", "1998", "1999", "2000",
"2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009", "2010",
"2011", "2012", "2013", "2014")
source("ui.R")
source("server.R")
shinyApp(ui = my.ui, server = my.server)
setwd("C:/Users/anush/Desktop/Info_201/a8-final-project")
setwd("C:/Users/anush/Desktop/Info_201/a8-final-project")
setwd("C:/Users/anush/Desktop/Info_201/a8-final-project")
library("tidyr")
library("shiny")
library("sp")
library("maptools")
library("dpylr")
# loads data sets
data <- read.csv('data/fatalities_data.csv',
stringsAsFactors =  FALSE, strip.white = TRUE)
# renames column names of data
colnames(data) <- c("States", "1967", "1968", "1969", "1970",
"1971", "1972", "1973", "1974", "1975",
"1976", "1977", "1978", "1979", "1980",
"1981", "1982", "1983", "1984", "1985",
"1986", "1987", "1988", "1989", "1990",
"1991", "1992", "1993", "1994", "1995",
"1996", "1997", "1998", "1999", "2000",
"2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009", "2010",
"2011", "2012", "2013", "2014")
source("ui.R")
source("server.R")
shinyApp(ui = my.ui, server = my.server)
install.packages("dplyr")
install.packages("dplyr")
library("tidyr")
library("dplyr")
library("plotly")
# lists the choices for the dropdownmenu
year.choices <- c("1967", "1968", "1969", "1970", "1971",
"1972", "1973", "1974", "1975", "1976",
"1977", "1978", "1979", "1980", "1981",
"1982", "1983", "1984", "1985", "1986",
"1987", "1988", "1989", "1990", "1991",
"1992", "1993", "1994", "1995", "1996",
"1997", "1998", "1999", "2000", "2001",
"2002", "2003", "2004", "2005", "2006",
"2007", "2008", "2009", "2010", "2011",
"2012", "2013", "2014")
# creates 2 tabs, one for the table and one for the map
my.ui <- fluidPage(
navbarPage("U.S. Highway Statistics",
tabPanel("Fatalities",
titlePanel("Fatalities"),
sidebarLayout(
sidebarPanel(
selectInput("Range", label = "Year",
choices = year.choices)
),
mainPanel(
tabsetPanel(
type = "tabs",
tabPanel("Table", textOutput("Explanation"),
dataTableOutput("table")),
tabPanel("Map",
textOutput("map.explanation"),
plotOutput("map", click = "plot_click"),
textOutput("print"))
)
)
)
),
tabPanel("Muhammed"
#paste your stuff here
),
tabPanel("Changyu"
#paste your stuff here
))
)
shinyUI(my.ui)
library("tidyr")
library("shiny")
library("sp")
library("maptools")
library("dpylr")
# loads data sets
data <- read.csv('data/fatalities_data.csv',
stringsAsFactors =  FALSE, strip.white = TRUE)
# renames column names of data
colnames(data) <- c("States", "1967", "1968", "1969", "1970",
"1971", "1972", "1973", "1974", "1975",
"1976", "1977", "1978", "1979", "1980",
"1981", "1982", "1983", "1984", "1985",
"1986", "1987", "1988", "1989", "1990",
"1991", "1992", "1993", "1994", "1995",
"1996", "1997", "1998", "1999", "2000",
"2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009", "2010",
"2011", "2012", "2013", "2014")
source("ui.R")
source("server.R")
shinyApp(ui = my.ui, server = my.server)
library("tidyr")
library("shiny")
library("sp")
library("maptools")
library("dplyr")
# loads data sets
data <- read.csv('data/fatalities_data.csv',
stringsAsFactors =  FALSE, strip.white = TRUE)
# renames column names of data
colnames(data) <- c("States", "1967", "1968", "1969", "1970",
"1971", "1972", "1973", "1974", "1975",
"1976", "1977", "1978", "1979", "1980",
"1981", "1982", "1983", "1984", "1985",
"1986", "1987", "1988", "1989", "1990",
"1991", "1992", "1993", "1994", "1995",
"1996", "1997", "1998", "1999", "2000",
"2001", "2002", "2003", "2004", "2005",
"2006", "2007", "2008", "2009", "2010",
"2011", "2012", "2013", "2014")
source("ui.R")
source("server.R")
shinyApp(ui = my.ui, server = my.server)
